stages:
  - stage: build
    jobs:
      - job: buildTerraform
        pool:
          vmImage: windows-latest
        steps:
        - checkout: self
        - task: CopyFiles@2
          inputs:
            Contents: |
              **.tf
            TargetFolder: '$(build.artifactstagingdirectory)'
            CleanTargetFolder: true
          displayName: 'Copy Terraform files'
        - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
          displayName: 'Use Terraform $(TerraformVersion)'
          inputs:
            terraformVersion: '$(TerraformVersion)'
        - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
          displayName: 'Terraform : azurerm init'
          inputs:
            workingDirectory: '$(build.artifactstagingdirectory)'
            backendServiceArm: 'AzureDevOps-Sub-MPSEnterpriseDev-Infra As Code'
            backendAzureRmResourceGroupName: 'rg-SharedServices-Test'
            backendAzureRmStorageAccountName: validateterraformsate
            backendAzureRmContainerName: tfstate
            backendAzureRmKey: tfwebapp.tfstate

        - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
          displayName: 'Terraform : azurerm validate'
          inputs:
            command: validate
            workingDirectory: '$(build.artifactstagingdirectory)'
            commandOptions: 

        - task: DeleteFiles@1
          displayName: 'Delete files from $(build.artifactstagingdirectory)'
          inputs:
            SourceFolder: '$(build.artifactstagingdirectory)'
            Contents: |
              .terraform.lock.hcl
              .terraform
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(Build.ArtifactStagingDirectory)'
            artifact: 'drop'
            publishLocation: 'pipeline'
          displayName: 'Publish Artifact'      